{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/jonas/M\\xFAsica/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/jonas/M\\xFAsica/moveit-next/src/components/Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from '../styles/components/Countdown.module.css';\nimport { useState, useEffect } from 'react';\n\nfunction Countdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      active = _useState2[0],\n      setActive = _useState2[1]; //o valor do click do botão sempre vai iniciar como falso\n\n\n  var minutes = Math.floor(time / 60); //arredonda o valor\n\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1]; //divide a string com dois indices em dois eçlementos e caso não temnha, coloca um 0 no lugar\n\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1]; //divide a string com dois indices em dois eçlementos e caso não temnha, coloca um 0 no lugar\n\n\n  function startCountdown() {\n    setActive(true); //quando o usuario clickar, o valor do estado vai para ativo\n  }\n\n  useEffect(function () {\n    console.log(\"Ativou o botão\");\n  }, [active]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countdown, \"akeWkGpaR0vZhlAZwfOYhn2IC0g=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/jonas/Música/moveit-next/src/components/Countdown.tsx"],"names":["styles","useState","useEffect","Countdown","time","setTime","active","setActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","startCountdown","console","log","countdownContainer","countdownButton"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,2CAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAAA,kBAEMF,QAAQ,CAAC,KAAK,EAAN,CAFd;AAAA,MAEXG,IAFW;AAAA,MAELC,OAFK;;AAAA,mBAGSJ,QAAQ,CAAC,KAAD,CAHjB;AAAA,MAGXK,MAHW;AAAA,MAGJC,SAHI,kBAGyB;;;AAE3C,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB,CALkB,CAKoB;;AACtC,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AANkB,8BAOeQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAPf;AAAA;AAAA,MAOXC,UAPW;AAAA,MAOAC,WAPA,8BAOyD;;;AAPzD,+BAQiBJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CARjB;AAAA;AAAA,MAQXG,WARW;AAAA,MAQCC,YARD,8BAQ2D;;;AAE7E,WAASC,cAAT,GAAyB;AACxBZ,IAAAA,SAAS,CAAC,IAAD,CAAT,CADwB,CACR;AAChB;;AAEDL,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAFQ,EAEP,CAACf,MAAD,CAFO,CAAT;AAGA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACsB,kBAAvB;AAAA,8BACA;AAAA,gCACA;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA,gCACA;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAaA;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAElB,MAAM,CAACuB,eAFlB;AAGA,MAAA,OAAO,EAAEJ,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAxCQhB,S;;KAAAA,S;AA0CT,eAAeA,SAAf","sourcesContent":["import styles from '../styles/components/Countdown.module.css';\nimport { useState, useEffect} from 'react';\n\nfunction Countdown(){\n  \n  const [time, setTime] = useState(25 * 60);\n  const [active,setActive] = useState(false);//o valor do click do botão sempre vai iniciar como falso\n\n  const minutes = Math.floor(time / 60);//arredonda o valor\n  const seconds = time % 60;\n  const [minuteLeft,minuteRight] = String(minutes).padStart(2,'0').split('');//divide a string com dois indices em dois eçlementos e caso não temnha, coloca um 0 no lugar\n  const [secondsLeft,secondsRight] = String(seconds).padStart(2,'0').split('');//divide a string com dois indices em dois eçlementos e caso não temnha, coloca um 0 no lugar\n\n  function startCountdown(){\n   setActive(true);//quando o usuario clickar, o valor do estado vai para ativo\n  }\n\n  useEffect(() => {\n    console.log(\"Ativou o botão\")\n  },[active]);\n  return(\n    <div>\n    <div className={styles.countdownContainer}>\n    <div>\n    <span>{minuteLeft}</span>\n    <span>{minuteRight}</span>\n    </div>\n    <span>:</span>\n    <div>\n    <span>{secondsLeft}</span>\n    <span>{secondsRight}</span>\n    </div>\n\n    </div>\n    <button \n    type=\"button\"\n    className={styles.countdownButton}\n    onClick={startCountdown}\n    >\n  Iniciar um ciclo\n</button>\n     </div>\n  );\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}